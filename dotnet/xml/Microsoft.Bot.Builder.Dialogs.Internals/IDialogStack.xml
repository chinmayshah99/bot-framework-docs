<Type Name="IDialogStack" FullName="Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack">
  <TypeSignature Language="C#" Value="public interface IDialogStack" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDialogStack" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDialogStack" />
  <TypeSignature Language="F#" Value="type IDialogStack = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The stack of dialogs in the conversational process.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Call&lt;R&gt;">
      <MemberSignature Language="C#" Value="public void Call&lt;R&gt; (Microsoft.Bot.Builder.Dialogs.IDialog&lt;R&gt; child, Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;R&gt; resume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Call&lt;R&gt;(class Microsoft.Bot.Builder.Dialogs.IDialog`1&lt;!!R&gt; child, class Microsoft.Bot.Builder.Dialogs.ResumeAfter`1&lt;!!R&gt; resume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Call``1(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ResumeAfter{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Call(Of R) (child As IDialog(Of R), resume As ResumeAfter(Of R))" />
      <MemberSignature Language="F#" Value="abstract member Call : Microsoft.Bot.Builder.Dialogs.IDialog&lt;'R&gt; * Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;'R&gt; -&gt; unit" Usage="iDialogStack.Call (child, resume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="R" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Bot.Builder.Dialogs.IDialog&lt;R&gt;" />
        <Parameter Name="resume" Type="Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;R&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="R">The type of result expected from the child dialog.</typeparam>
        <param name="child">The child dialog.</param>
        <param name="resume">The method to resume when the child dialog has completed.</param>
        <summary>
            Call a child dialog and add it to the top of the stack.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Done&lt;R&gt;">
      <MemberSignature Language="C#" Value="public void Done&lt;R&gt; (R value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Done&lt;R&gt;(!!R value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Done``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Done(Of R) (value As R)" />
      <MemberSignature Language="F#" Value="abstract member Done : 'R -&gt; unit" Usage="iDialogStack.Done value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="R" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="R" />
      </Parameters>
      <Docs>
        <typeparam name="R">The type of the result dialog.</typeparam>
        <param name="value">The value of the result.</param>
        <summary>
            Complete the current dialog and return a result to the parent dialog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public void Fail (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Fail(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Fail (error As Exception)" />
      <MemberSignature Language="F#" Value="abstract member Fail : Exception -&gt; unit" Usage="iDialogStack.Fail error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error">The error.</param>
        <summary>
            Fail the current dialog and return an exception to the parent dialog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Forward&lt;R,T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Forward&lt;R,T&gt; (Microsoft.Bot.Builder.Dialogs.IDialog&lt;R&gt; child, Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;R&gt; resume, T item, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Forward&lt;R, T&gt;(class Microsoft.Bot.Builder.Dialogs.IDialog`1&lt;!!R&gt; child, class Microsoft.Bot.Builder.Dialogs.ResumeAfter`1&lt;!!R&gt; resume, !!T item, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Forward``2(Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ResumeAfter{``0},``1,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Forward(Of R, T) (child As IDialog(Of R), resume As ResumeAfter(Of R), item As T, token As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member Forward : Microsoft.Bot.Builder.Dialogs.IDialog&lt;'R&gt; * Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;'R&gt; * 'T * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iDialogStack.Forward (child, resume, item, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="R" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Bot.Builder.Dialogs.IDialog&lt;R&gt;" />
        <Parameter Name="resume" Type="Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;R&gt;" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="R">The type of result expected from the child dialog.</typeparam>
        <typeparam name="T">The type of the item posted to child dialog.</typeparam>
        <param name="child">The child dialog.</param>
        <param name="resume">The method to resume when the child dialog has completed.</param>
        <param name="item">The item that will be posted to child dialog.</param>
        <param name="token">A cancellation token.</param>
        <summary>
            Call a child dialog, add it to the top of the stack and post the item to the child dialog.
            </summary>
        <returns>A task representing the Forward operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Delegate&gt; Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Delegate&gt; Frames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As IReadOnlyList(Of Delegate)" />
      <MemberSignature Language="F#" Value="member this.Frames : System.Collections.Generic.IReadOnlyList&lt;Delegate&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Delegate&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The dialog frames active on the stack.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post&lt;E&gt;">
      <MemberSignature Language="C#" Value="public void Post&lt;E&gt; (E event, Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;E&gt; resume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post&lt;E&gt;(!!E event, class Microsoft.Bot.Builder.Dialogs.ResumeAfter`1&lt;!!E&gt; resume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Post``1(``0,Microsoft.Bot.Builder.Dialogs.ResumeAfter{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post(Of E) (event As E, resume As ResumeAfter(Of E))" />
      <MemberSignature Language="F#" Value="abstract member Post : 'E * Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;'E&gt; -&gt; unit" Usage="iDialogStack.Post (event, resume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="E" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="event" Type="E" />
        <Parameter Name="resume" Type="Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;E&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="E">To be added.</typeparam>
        <param name="event">The event to post to the queue.</param>
        <param name="resume">The method to resume when the event has been delivered.</param>
        <summary>
            Post an internal event to the queue.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iDialogStack.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the stack.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait&lt;R&gt;">
      <MemberSignature Language="C#" Value="public void Wait&lt;R&gt; (Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;R&gt; resume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Wait&lt;R&gt;(class Microsoft.Bot.Builder.Dialogs.ResumeAfter`1&lt;!!R&gt; resume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack.Wait``1(Microsoft.Bot.Builder.Dialogs.ResumeAfter{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait(Of R) (resume As ResumeAfter(Of R))" />
      <MemberSignature Language="F#" Value="abstract member Wait : Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;'R&gt; -&gt; unit" Usage="iDialogStack.Wait resume" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="R" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="resume" Type="Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;R&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="R">To be added.</typeparam>
        <param name="resume">The method to resume when the event has been received.</param>
        <summary>
            Suspend the current dialog until an external event has been sent to the bot.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>