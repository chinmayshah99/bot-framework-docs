<Type Name="Extensions" FullName="Microsoft.Bot.Builder.Dialogs.Internals.Extensions">
  <TypeSignature Language="C#" Value="public static class Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.Internals.Extensions" />
  <TypeSignature Language="VB.NET" Value="Public Module Extensions" />
  <TypeSignature Language="F#" Value="type Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="InterruptAsync&lt;T,R&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task InterruptAsync&lt;T,R&gt; (this Microsoft.Bot.Builder.Dialogs.Internals.IDialogTask task, Microsoft.Bot.Builder.Dialogs.IDialog&lt;T&gt; dialog, R item, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task InterruptAsync&lt;T, R&gt;(class Microsoft.Bot.Builder.Dialogs.Internals.IDialogTask task, class Microsoft.Bot.Builder.Dialogs.IDialog`1&lt;!!T&gt; dialog, !!R item, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.Extensions.InterruptAsync``2(Microsoft.Bot.Builder.Dialogs.Internals.IDialogTask,Microsoft.Bot.Builder.Dialogs.IDialog{``0},``1,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member InterruptAsync : Microsoft.Bot.Builder.Dialogs.Internals.IDialogTask * Microsoft.Bot.Builder.Dialogs.IDialog&lt;'T&gt; * 'R * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Bot.Builder.Dialogs.Internals.Extensions.InterruptAsync (task, dialog, item, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Builder.Dialogs.Internals.Extensions/&lt;InterruptAsync&gt;d__1`2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="R" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="task" Type="Microsoft.Bot.Builder.Dialogs.Internals.IDialogTask" RefType="this" />
        <Parameter Name="dialog" Type="Microsoft.Bot.Builder.Dialogs.IDialog&lt;T&gt;" />
        <Parameter Name="item" Type="R" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of result expected from the dialog.</typeparam>
        <typeparam name="R">The type of the item posted to dialog.</typeparam>
        <param name="task">The dialog task.</param>
        <param name="dialog">The new interrupting dialog.</param>
        <param name="item">The item to forward to the new interrupting dialog.</param>
        <param name="token">The cancellation token.</param>
        <summary>
            Interrupt the waiting dialog with a new dialog
            </summary>
        <returns>A task that represents the interruption operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBy&lt;T,R&gt;">
      <MemberSignature Language="C#" Value="public static T MaxBy&lt;T,R&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; items, Func&lt;T,R&gt; selectRank, System.Collections.Generic.IComparer&lt;R&gt; comparer = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T MaxBy&lt;T, R&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items, class System.Func`2&lt;!!T, !!R&gt; selectRank, class System.Collections.Generic.IComparer`1&lt;!!R&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Internals.Extensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MaxBy(Of T, R) (items As IEnumerable(Of T), selectRank As Func(Of T, R), Optional comparer As IComparer(Of R) = null) As T" />
      <MemberSignature Language="F#" Value="static member MaxBy : seq&lt;'T&gt; * Func&lt;'T, 'R&gt; * System.Collections.Generic.IComparer&lt;'R&gt; -&gt; 'T" Usage="Microsoft.Bot.Builder.Dialogs.Internals.Extensions.MaxBy (items, selectRank, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="R" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="selectRank" Type="System.Func&lt;T,R&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;R&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <typeparam name="R">To be added.</typeparam>
        <param name="items">To be added.</param>
        <param name="selectRank">To be added.</param>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>