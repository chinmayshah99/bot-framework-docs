<Type Name="MessageDelegate&lt;T&gt;" FullName="Microsoft.Bot.Builder.FormFlow.MessageDelegate&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.FormFlow.PromptAttribute&gt; MessageDelegate&lt;T&gt;(T state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MessageDelegate`1&lt;T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.FormFlow.MessageDelegate`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function MessageDelegate(Of T)(state As T) As Task(Of PromptAttribute) " />
  <TypeSignature Language="F#" Value="type MessageDelegate&lt;'T&gt; = delegate of 'T -&gt; Task&lt;PromptAttribute&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="state" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.FormFlow.PromptAttribute&gt;</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">    Form state type. </typeparam>
    <param name="state">    Form state. </param>
    <summary>   Given <paramref name="state" /> return a <see cref="T:Microsoft.Bot.Builder.FormFlow.PromptAttribute" /> with a template for the message to display. </summary>
    <returns>   A PromptAttribute describing the message to display. </returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>