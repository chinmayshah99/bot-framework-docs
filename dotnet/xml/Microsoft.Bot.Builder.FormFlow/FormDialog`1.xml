<Type Name="FormDialog&lt;T&gt;" FullName="Microsoft.Bot.Builder.FormFlow.FormDialog&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class FormDialog&lt;T&gt; : Microsoft.Bot.Builder.Dialogs.IDialog&lt;T&gt;, Microsoft.Bot.Builder.FormFlow.IFormDialog&lt;T&gt;, System.Runtime.Serialization.ISerializable where T : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FormDialog`1&lt;class T&gt; extends System.Object implements class Microsoft.Bot.Builder.Dialogs.IDialog`1&lt;!T&gt;, class Microsoft.Bot.Builder.FormFlow.IFormDialog`1&lt;!T&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.FormFlow.FormDialog`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormDialog(Of T)&#xA;Implements IDialog(Of T), IFormDialog(Of T), ISerializable" />
  <TypeSignature Language="F#" Value="type FormDialog&lt;'T (requires 'T : null)&gt; = class&#xA;    interface IFormDialog&lt;'T (requires 'T : null)&gt;&#xA;    interface IDialog&lt;'T (requires 'T : null)&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Dialogs.IDialog&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.FormFlow.IFormDialog&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">The type to fill in.</typeparam>
    <summary>
            Form dialog to fill in your state.
            </summary>
    <remarks>
            This is the root class for managing a FormFlow dialog. It is usually created
            through the factory methods <see cref="M:Microsoft.Bot.Builder.FormFlow.FormDialog.FromForm``1(Microsoft.Bot.Builder.FormFlow.BuildFormDelegate{``0},Microsoft.Bot.Builder.FormFlow.FormOptions)" />
            or <see cref="M:Microsoft.Bot.Builder.FormFlow.FormDialog.FromType``1(Microsoft.Bot.Builder.FormFlow.FormOptions)" />. 
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormDialog (T state, Microsoft.Bot.Builder.FormFlow.BuildFormDelegate&lt;T&gt; buildForm = null, Microsoft.Bot.Builder.FormFlow.FormOptions options = Microsoft.Bot.Builder.FormFlow.FormOptions.None, System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Luis.Models.EntityRecommendation&gt; entities = null, System.Globalization.CultureInfo cultureInfo = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T state, class Microsoft.Bot.Builder.FormFlow.BuildFormDelegate`1&lt;!T&gt; buildForm, valuetype Microsoft.Bot.Builder.FormFlow.FormOptions options, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Builder.Luis.Models.EntityRecommendation&gt; entities, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.FormDialog`1.#ctor(`0,Microsoft.Bot.Builder.FormFlow.BuildFormDelegate{`0},Microsoft.Bot.Builder.FormFlow.FormOptions,System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Luis.Models.EntityRecommendation},System.Globalization.CultureInfo)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.FormFlow.FormDialog&lt;'T (requires 'T : null)&gt; : 'T * Microsoft.Bot.Builder.FormFlow.BuildFormDelegate&lt;'T (requires 'T : null)&gt; * Microsoft.Bot.Builder.FormFlow.FormOptions * seq&lt;Microsoft.Bot.Builder.Luis.Models.EntityRecommendation&gt; * System.Globalization.CultureInfo -&gt; Microsoft.Bot.Builder.FormFlow.FormDialog&lt;'T (requires 'T : null)&gt;" Usage="new Microsoft.Bot.Builder.FormFlow.FormDialog&lt;'T (requires 'T : null)&gt; (state, buildForm, options, entities, cultureInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="T" />
        <Parameter Name="buildForm" Type="Microsoft.Bot.Builder.FormFlow.BuildFormDelegate&lt;T&gt;" />
        <Parameter Name="options" Type="Microsoft.Bot.Builder.FormFlow.FormOptions" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Luis.Models.EntityRecommendation&gt;" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="state">        The initial state. </param>
        <param name="buildForm">    A delegate for building the form. </param>
        <param name="options">      Options for controlling the form. </param>
        <param name="entities">     Optional entities to process into the form. </param>
        <param name="cultureInfo">  The culture to use. </param>
        <summary>   Constructor for creating a FormFlow dialog. </summary>
        <remarks>For building forms <see cref="T:Microsoft.Bot.Builder.FormFlow.IFormBuilder`1" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageReceived">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task MessageReceived (Microsoft.Bot.Builder.Dialogs.IDialogContext context, Microsoft.Bot.Builder.Dialogs.IAwaitable&lt;Microsoft.Bot.Connector.IMessageActivity&gt; toBot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task MessageReceived(class Microsoft.Bot.Builder.Dialogs.IDialogContext context, class Microsoft.Bot.Builder.Dialogs.IAwaitable`1&lt;class Microsoft.Bot.Connector.IMessageActivity&gt; toBot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.FormDialog`1.MessageReceived(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{Microsoft.Bot.Connector.IMessageActivity})" />
      <MemberSignature Language="VB.NET" Value="Public Function MessageReceived (context As IDialogContext, toBot As IAwaitable(Of IMessageActivity)) As Task" />
      <MemberSignature Language="F#" Value="member this.MessageReceived : Microsoft.Bot.Builder.Dialogs.IDialogContext * Microsoft.Bot.Builder.Dialogs.IAwaitable&lt;Microsoft.Bot.Connector.IMessageActivity&gt; -&gt; System.Threading.Tasks.Task" Usage="formDialog.MessageReceived (context, toBot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Builder.FormFlow.FormDialog`1/&lt;MessageReceived&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" />
        <Parameter Name="toBot" Type="Microsoft.Bot.Builder.Dialogs.IAwaitable&lt;Microsoft.Bot.Connector.IMessageActivity&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="toBot">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Dialogs.IDialog&lt;T&gt;.StartAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IDialog&lt;T&gt;.StartAsync (Microsoft.Bot.Builder.Dialogs.IDialogContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.Bot.Builder.Dialogs.IDialog&lt;T&gt;.StartAsync(class Microsoft.Bot.Builder.Dialogs.IDialogContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.FormDialog`1.Microsoft#Bot#Builder#Dialogs#IDialog&lt;T&gt;#StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)" />
      <MemberSignature Language="VB.NET" Value="Function StartAsync (context As IDialogContext) As Task Implements IDialog(Of T).StartAsync" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Dialogs.IDialog`1.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Builder.FormFlow.FormDialog`1/&lt;Microsoft-Bot-Builder-Dialogs-IDialog&lt;T&gt;-StartAsync&gt;d__15))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.FormFlow.IFormDialog&lt;T&gt;.Form">
      <MemberSignature Language="C#" Value="Microsoft.Bot.Builder.FormFlow.IForm&lt;T&gt; Microsoft.Bot.Builder.FormFlow.IFormDialog&lt;T&gt;.Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.FormFlow.IForm`1&lt;!T&gt; Microsoft.Bot.Builder.FormFlow.IFormDialog&lt;T&gt;.Form" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.FormFlow.FormDialog`1.Microsoft#Bot#Builder#FormFlow#IFormDialog&lt;T&gt;#Form" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Form As IForm(Of T) Implements IFormDialog(Of T).Form" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Builder.FormFlow.IFormDialog`1.Form</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.FormFlow.IForm&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.FormDialog`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>