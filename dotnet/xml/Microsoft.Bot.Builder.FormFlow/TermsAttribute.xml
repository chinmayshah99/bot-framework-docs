<Type Name="TermsAttribute" FullName="Microsoft.Bot.Builder.FormFlow.TermsAttribute">
  <TypeSignature Language="C#" Value="public class TermsAttribute : Microsoft.Bot.Builder.FormFlow.FormFlowAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TermsAttribute extends Microsoft.Bot.Builder.FormFlow.FormFlowAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.FormFlow.TermsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class TermsAttribute&#xA;Inherits FormFlowAttribute" />
  <TypeSignature Language="F#" Value="type TermsAttribute = class&#xA;    inherit FormFlowAttribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.FormFlow.FormFlowAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Attribute to override the default terms used to match a field, property or enum value to user input.
            </summary>
    <remarks>
            By default terms are generated by calling the <see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.GenerateTerms(System.String,System.Int32)" /> method with a max phrase length of 3
            on the name of the field, property or enum value.  Using this attribute you can specify your own regular expressions to match or if you specify the 
            <see cref="P:Microsoft.Bot.Builder.FormFlow.TermsAttribute.MaxPhrase" /> attribute you can cause <see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.GenerateTerms(System.String,System.Int32)" /> to be called on your strings with the
            maximum phrase length you specify.  If your term is a simple alphanumeric one, then it will only be matched on word boundaries with \b unless you start your
            expression with parentheses in which case you control the boundary matching behavior through your regular expression.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TermsAttribute (params string[] alternatives);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] alternatives) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.TermsAttribute.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray alternatives As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.FormFlow.TermsAttribute : string[] -&gt; Microsoft.Bot.Builder.FormFlow.TermsAttribute" Usage="new Microsoft.Bot.Builder.FormFlow.TermsAttribute alternatives" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternatives" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternatives">Regular expressions or terms.</param>
        <summary>
            Regular expressions or terms used when matching user input.
            </summary>
        <remarks>
            If <see cref="P:Microsoft.Bot.Builder.FormFlow.TermsAttribute.MaxPhrase" /> is specified the supplied alternatives will be passed to <see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.GenerateTerms(System.String,System.Int32)" /> to generate regular expressions
            with a maximum phrase size of <see cref="P:Microsoft.Bot.Builder.FormFlow.TermsAttribute.MaxPhrase" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alternatives">
      <MemberSignature Language="C#" Value="public string[] Alternatives;" />
      <MemberSignature Language="ILAsm" Value=".field public string[] Alternatives" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Builder.FormFlow.TermsAttribute.Alternatives" />
      <MemberSignature Language="VB.NET" Value="Public Alternatives As String() " />
      <MemberSignature Language="F#" Value="val mutable Alternatives : string[]" Usage="Microsoft.Bot.Builder.FormFlow.TermsAttribute.Alternatives" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Regular expressions for matching user input.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPhrase">
      <MemberSignature Language="C#" Value="public int MaxPhrase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPhrase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.FormFlow.TermsAttribute.MaxPhrase" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPhrase As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxPhrase : int with get, set" Usage="Microsoft.Bot.Builder.FormFlow.TermsAttribute.MaxPhrase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum pharse length to use when calling <see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.GenerateTerms(System.String,System.Int32)" /> on your supplied terms.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>