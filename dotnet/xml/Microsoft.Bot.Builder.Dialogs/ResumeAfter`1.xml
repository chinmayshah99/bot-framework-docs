<Type Name="ResumeAfter&lt;T&gt;" FullName="Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate System.Threading.Tasks.Task ResumeAfter&lt;in T&gt;(IDialogContext context, IAwaitable&lt;in T&gt; result);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ResumeAfter`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.ResumeAfter`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ResumeAfter(Of In T)(context As IDialogContext, result As IAwaitable(Of In T)) As Task " />
  <TypeSignature Language="F#" Value="type ResumeAfter&lt;'T&gt; = delegate of IDialogContext * IAwaitable&lt;'T&gt; -&gt; Task" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" />
    <Parameter Name="result" Type="Microsoft.Bot.Builder.Dialogs.IAwaitable&lt;T&gt;" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Threading.Tasks.Task</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">The type of the result.</typeparam>
    <param name="context">The dialog context.</param>
    <param name="result">The result.</param>
    <summary>
            Encapsulates a method that represents the code to execute after a result is available.
            </summary>
    <returns>A task that represents the code that will resume after the result is available.</returns>
    <remarks>
            The result is often a message from the user.
            </remarks>
  </Docs>
</Type>