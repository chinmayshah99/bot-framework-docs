<Type Name="IntentHandler" FullName="Microsoft.Bot.Builder.Dialogs.IntentHandler">
  <TypeSignature Language="C#" Value="public delegate System.Threading.Tasks.Task IntentHandler(IDialogContext context, LuisResult luisResult);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IntentHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.IntentHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function IntentHandler(context As IDialogContext, luisResult As LuisResult) As Task " />
  <TypeSignature Language="F#" Value="type IntentHandler = delegate of IDialogContext * LuisResult -&gt; Task" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" />
    <Parameter Name="luisResult" Type="Microsoft.Bot.Builder.Luis.Models.LuisResult" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Threading.Tasks.Task</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context">The dialog context.</param>
    <param name="luisResult">The LUIS result.</param>
    <summary>
            The handler for a LUIS intent.
            </summary>
    <returns>A task representing the completion of the intent processing.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>