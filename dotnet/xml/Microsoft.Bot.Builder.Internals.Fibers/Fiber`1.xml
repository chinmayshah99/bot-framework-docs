<Type Name="Fiber&lt;C&gt;" FullName="Microsoft.Bot.Builder.Internals.Fibers.Fiber&lt;C&gt;">
  <TypeSignature Language="C#" Value="public sealed class Fiber&lt;C&gt; : Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;, Microsoft.Bot.Builder.Internals.Fibers.IFiberLoop&lt;C&gt;, Microsoft.Bot.Builder.Internals.Fibers.IWaiter&lt;C&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Fiber`1&lt;C&gt; extends System.Object implements class Microsoft.Bot.Builder.Internals.Fibers.IFiber`1&lt;!C&gt;, class Microsoft.Bot.Builder.Internals.Fibers.IFiberLoop`1&lt;!C&gt;, class Microsoft.Bot.Builder.Internals.Fibers.IWaiter`1&lt;!C&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Fiber(Of C)&#xA;Implements IFiber(Of C), IFiberLoop(Of C), IWaiter(Of C)" />
  <TypeSignature Language="F#" Value="type Fiber&lt;'C&gt; = class&#xA;    interface IFiber&lt;'C&gt;&#xA;    interface IWaiter&lt;'C&gt;&#xA;    interface IFiberLoop&lt;'C&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Internals.Fibers.IFiberLoop&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Internals.Fibers.IWaiter&lt;C&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Fiber (Microsoft.Bot.Builder.Internals.Fibers.IFrameFactory&lt;C&gt; factory, Microsoft.Bot.Builder.Internals.Fibers.IWaitFactory&lt;C&gt; waits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.Internals.Fibers.IFrameFactory`1&lt;!C&gt; factory, class Microsoft.Bot.Builder.Internals.Fibers.IWaitFactory`1&lt;!C&gt; waits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1.#ctor(Microsoft.Bot.Builder.Internals.Fibers.IFrameFactory{`0},Microsoft.Bot.Builder.Internals.Fibers.IWaitFactory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (factory As IFrameFactory(Of C), waits As IWaitFactory(Of C))" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Internals.Fibers.Fiber&lt;'C&gt; : Microsoft.Bot.Builder.Internals.Fibers.IFrameFactory&lt;'C&gt; * Microsoft.Bot.Builder.Internals.Fibers.IWaitFactory&lt;'C&gt; -&gt; Microsoft.Bot.Builder.Internals.Fibers.Fiber&lt;'C&gt;" Usage="new Microsoft.Bot.Builder.Internals.Fibers.Fiber&lt;'C&gt; (factory, waits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Bot.Builder.Internals.Fibers.IFrameFactory&lt;C&gt;" />
        <Parameter Name="waits" Type="Microsoft.Bot.Builder.Internals.Fibers.IWaitFactory&lt;C&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <param name="waits">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Done">
      <MemberSignature Language="C#" Value="void IFiber&lt;C&gt;.Done ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Done() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1.Microsoft#Bot#Builder#Internals#Fibers#IFiber&lt;C&gt;#Done" />
      <MemberSignature Language="VB.NET" Value="Sub Done () Implements IFiber(Of C).Done" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Internals.Fibers.IFiber`1.Done</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Frames">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.Bot.Builder.Internals.Fibers.IFrame&lt;C&gt;&gt; Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Bot.Builder.Internals.Fibers.IFrame`1&lt;!C&gt;&gt; Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Frames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1.Microsoft#Bot#Builder#Internals#Fibers#IFiber&lt;C&gt;#Frames" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Frames As IReadOnlyList(Of IFrame(Of C)) Implements IFiber(Of C).Frames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Builder.Internals.Fibers.IFiber`1.Frames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Bot.Builder.Internals.Fibers.IFrame&lt;C&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Push">
      <MemberSignature Language="C#" Value="void IFiber&lt;C&gt;.Push ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1.Microsoft#Bot#Builder#Internals#Fibers#IFiber&lt;C&gt;#Push" />
      <MemberSignature Language="VB.NET" Value="Sub Push () Implements IFiber(Of C).Push" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Internals.Fibers.IFiber`1.Push</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Waits">
      <MemberSignature Language="C#" Value="Microsoft.Bot.Builder.Internals.Fibers.IWaitFactory&lt;C&gt; Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Waits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Internals.Fibers.IWaitFactory`1&lt;!C&gt; Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;.Waits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1.Microsoft#Bot#Builder#Internals#Fibers#IFiber&lt;C&gt;#Waits" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Waits As IWaitFactory(Of C) Implements IFiber(Of C).Waits" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Builder.Internals.Fibers.IFiber`1.Waits</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWaitFactory&lt;C&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Internals.Fibers.IFiberLoop&lt;C&gt;.PollAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;&gt; IFiberLoop&lt;C&gt;.PollAsync (C context, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!C&gt;&gt; Microsoft.Bot.Builder.Internals.Fibers.IFiberLoop&lt;C&gt;.PollAsync(!C context, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1.Microsoft#Bot#Builder#Internals#Fibers#IFiberLoop&lt;C&gt;#PollAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function PollAsync (context As C, token As CancellationToken) As Task(Of IWait(Of C)) Implements IFiberLoop(Of C).PollAsync" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Internals.Fibers.IFiberLoop`1.PollAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Builder.Internals.Fibers.Fiber`1/&lt;Microsoft-Bot-Builder-Internals-Fibers-IFiberLoop&lt;C&gt;-PollAsync&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="C" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Internals.Fibers.IWaiter&lt;C&gt;.Mark">
      <MemberSignature Language="C#" Value="Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; Microsoft.Bot.Builder.Internals.Fibers.IWaiter&lt;C&gt;.Mark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!C&gt; Microsoft.Bot.Builder.Internals.Fibers.IWaiter&lt;C&gt;.Mark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1.Microsoft#Bot#Builder#Internals#Fibers#IWaiter&lt;C&gt;#Mark" />
      <MemberSignature Language="VB.NET" Value=" Property Mark As IWait(Of C) Implements IWaiter(Of C).Mark" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Builder.Internals.Fibers.IWaiter`1.Mark</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Internals.Fibers.IWaiter&lt;C&gt;.Wait">
      <MemberSignature Language="C#" Value="Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; Microsoft.Bot.Builder.Internals.Fibers.IWaiter&lt;C&gt;.Wait { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!C&gt; Microsoft.Bot.Builder.Internals.Fibers.IWaiter&lt;C&gt;.Wait" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Internals.Fibers.Fiber`1.Microsoft#Bot#Builder#Internals#Fibers#IWaiter&lt;C&gt;#Wait" />
      <MemberSignature Language="VB.NET" Value=" Property Wait As IWait(Of C) Implements IWaiter(Of C).Wait" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Builder.Internals.Fibers.IWaiter`1.Wait</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>