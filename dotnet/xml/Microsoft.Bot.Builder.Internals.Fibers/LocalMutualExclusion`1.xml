<Type Name="LocalMutualExclusion&lt;T&gt;" FullName="Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class LocalMutualExclusion&lt;T&gt; : Microsoft.Bot.Builder.Internals.Fibers.IScope&lt;T&gt; where T : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalMutualExclusion`1&lt;class T&gt; extends System.Object implements class Microsoft.Bot.Builder.Internals.Fibers.IScope`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalMutualExclusion(Of T)&#xA;Implements IScope(Of T)" />
  <TypeSignature Language="F#" Value="type LocalMutualExclusion&lt;'T (requires 'T : null)&gt; = class&#xA;    interface IScope&lt;'T (requires 'T : null)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Internals.Fibers.IScope&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalMutualExclusion (System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IEqualityComparer(Of T))" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion&lt;'T (requires 'T : null)&gt; : System.Collections.Generic.IEqualityComparer&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion&lt;'T (requires 'T : null)&gt;" Usage="new Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion&lt;'T (requires 'T : null)&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Internals.Fibers.IScope&lt;T&gt;.WithScopeAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;IDisposable&gt; IScope&lt;T&gt;.WithScopeAsync (T item, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IDisposable&gt; Microsoft.Bot.Builder.Internals.Fibers.IScope&lt;T&gt;.WithScopeAsync(!T item, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion`1.Microsoft#Bot#Builder#Internals#Fibers#IScope&lt;T&gt;#WithScopeAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function WithScopeAsync (item As T, token As CancellationToken) As Task(Of IDisposable) Implements IScope(Of T).WithScopeAsync" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Internals.Fibers.IScope`1.WithScopeAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion`1/&lt;Microsoft-Bot-Builder-Internals-Fibers-IScope&lt;T&gt;-WithScopeAsync&gt;d__4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IDisposable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetReferenceCount">
      <MemberSignature Language="C#" Value="public bool TryGetReferenceCount (T item, out int referenceCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetReferenceCount(!T item, [out] int32&amp; referenceCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.LocalMutualExclusion`1.TryGetReferenceCount(`0,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetReferenceCount (item As T, ByRef referenceCount As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetReferenceCount : 'T *  -&gt; bool" Usage="localMutualExclusion.TryGetReferenceCount (item, referenceCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="referenceCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="referenceCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>