<Type Name="IEventConsumer&lt;Event&gt;" FullName="Microsoft.Bot.Builder.Base.IEventConsumer&lt;Event&gt;">
  <TypeSignature Language="C#" Value="public interface IEventConsumer&lt;Event&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventConsumer`1&lt;Event&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Base.IEventConsumer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventConsumer(Of Event)" />
  <TypeSignature Language="F#" Value="type IEventConsumer&lt;'Event&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="Event" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="Event">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryPull">
      <MemberSignature Language="C#" Value="public bool TryPull (out Event event);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryPull([out] !Event&amp; event) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Base.IEventConsumer`1.TryPull(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPull (ByRef event As Event) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryPull :  -&gt; bool" Usage="iEventConsumer.TryPull event" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event" Type="Event&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="event">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>