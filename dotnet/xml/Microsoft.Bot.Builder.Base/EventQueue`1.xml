<Type Name="EventQueue&lt;Event&gt;" FullName="Microsoft.Bot.Builder.Base.EventQueue&lt;Event&gt;">
  <TypeSignature Language="C#" Value="public sealed class EventQueue&lt;Event&gt; : Microsoft.Bot.Builder.Base.IEventConsumer&lt;Event&gt;, Microsoft.Bot.Builder.Base.IEventProducer&lt;Event&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventQueue`1&lt;Event&gt; extends System.Object implements class Microsoft.Bot.Builder.Base.IEventConsumer`1&lt;!Event&gt;, class Microsoft.Bot.Builder.Base.IEventProducer`1&lt;!Event&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Base.EventQueue`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventQueue(Of Event)&#xA;Implements IEventConsumer(Of Event), IEventProducer(Of Event)" />
  <TypeSignature Language="F#" Value="type EventQueue&lt;'Event&gt; = class&#xA;    interface IEventProducer&lt;'Event&gt;&#xA;    interface IEventConsumer&lt;'Event&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="Event" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Base.IEventConsumer&lt;Event&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Base.IEventProducer&lt;Event&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="Event">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Base.EventQueue`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Base.IEventConsumer&lt;Event&gt;.TryPull">
      <MemberSignature Language="C#" Value="bool IEventConsumer&lt;Event&gt;.TryPull (out Event event);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.Bot.Builder.Base.IEventConsumer&lt;Event&gt;.TryPull([out] !Event&amp; event) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Base.EventQueue`1.Microsoft#Bot#Builder#Base#IEventConsumer&lt;Event&gt;#TryPull(`0@)" />
      <MemberSignature Language="VB.NET" Value="Function TryPull (ByRef event As Event) As Boolean Implements IEventConsumer(Of Event).TryPull" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Base.IEventConsumer`1.TryPull(`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event" Type="Event&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="event">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.Base.IEventProducer&lt;Event&gt;.Post">
      <MemberSignature Language="C#" Value="void IEventProducer&lt;Event&gt;.Post (Event event, Action onPull);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Bot.Builder.Base.IEventProducer&lt;Event&gt;.Post(!Event event, class System.Action onPull) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Base.EventQueue`1.Microsoft#Bot#Builder#Base#IEventProducer&lt;Event&gt;#Post(`0,System.Action)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Base.IEventProducer`1.Post(`0,System.Action)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event" Type="Event" />
        <Parameter Name="onPull" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="event">To be added.</param>
        <param name="onPull">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>