<Type Name="BotAuthentication" FullName="Microsoft.Bot.Connector.BotAuthentication">
  <TypeSignature Language="C#" Value="public class BotAuthentication : System.Web.Http.Filters.ActionFilterAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BotAuthentication extends System.Web.Http.Filters.ActionFilterAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.BotAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public Class BotAuthentication&#xA;Inherits ActionFilterAttribute" />
  <TypeSignature Language="F#" Value="type BotAuthentication = class&#xA;    inherit ActionFilterAttribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Http.Filters.ActionFilterAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CredentialProviderType">
      <MemberSignature Language="C#" Value="public Type CredentialProviderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CredentialProviderType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.BotAuthentication.CredentialProviderType" />
      <MemberSignature Language="VB.NET" Value="Public Property CredentialProviderType As Type" />
      <MemberSignature Language="F#" Value="member this.CredentialProviderType : Type with get, set" Usage="Microsoft.Bot.Connector.BotAuthentication.CredentialProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Type which implements ICredentialProvider interface to allow multiple bot AppIds to be registered for the same endpoint
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableEmulatorTokens">
      <MemberSignature Language="C#" Value="public bool DisableEmulatorTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableEmulatorTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.BotAuthentication.DisableEmulatorTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableEmulatorTokens As Boolean" />
      <MemberSignature Language="F#" Value="member this.DisableEmulatorTokens : bool with get, set" Usage="Microsoft.Bot.Connector.BotAuthentication.DisableEmulatorTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrosoftAppId">
      <MemberSignature Language="C#" Value="public string MicrosoftAppId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MicrosoftAppId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.BotAuthentication.MicrosoftAppId" />
      <MemberSignature Language="VB.NET" Value="Public Property MicrosoftAppId As String" />
      <MemberSignature Language="F#" Value="member this.MicrosoftAppId : string with get, set" Usage="Microsoft.Bot.Connector.BotAuthentication.MicrosoftAppId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Microsoft AppId for the bot 
            </summary>
        <value>To be added.</value>
        <remarks>
            Needs to be used with MicrosoftAppPassword.  Ignored if CredentialProviderType is specified.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrosoftAppIdSettingName">
      <MemberSignature Language="C#" Value="public string MicrosoftAppIdSettingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MicrosoftAppIdSettingName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.BotAuthentication.MicrosoftAppIdSettingName" />
      <MemberSignature Language="VB.NET" Value="Public Property MicrosoftAppIdSettingName As String" />
      <MemberSignature Language="F#" Value="member this.MicrosoftAppIdSettingName : string with get, set" Usage="Microsoft.Bot.Connector.BotAuthentication.MicrosoftAppIdSettingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of Setting in web.config which has the Microsoft AppId for the bot 
            </summary>
        <value>To be added.</value>
        <remarks>
            Needs to be used with MicrosoftAppPasswordSettingName. Ignored if CredentialProviderType is specified.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrosoftAppPassword">
      <MemberSignature Language="C#" Value="public string MicrosoftAppPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MicrosoftAppPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.BotAuthentication.MicrosoftAppPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property MicrosoftAppPassword As String" />
      <MemberSignature Language="F#" Value="member this.MicrosoftAppPassword : string with get, set" Usage="Microsoft.Bot.Connector.BotAuthentication.MicrosoftAppPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Microsoft AppPassword for the bot (needs to be used with MicrosoftAppId)
            </summary>
        <value>To be added.</value>
        <remarks>
            Needs to be used with MicrosoftAppId. Ignored if CredentialProviderType is specified.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrosoftAppPasswordSettingName">
      <MemberSignature Language="C#" Value="public string MicrosoftAppPasswordSettingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MicrosoftAppPasswordSettingName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.BotAuthentication.MicrosoftAppPasswordSettingName" />
      <MemberSignature Language="VB.NET" Value="Public Property MicrosoftAppPasswordSettingName As String" />
      <MemberSignature Language="F#" Value="member this.MicrosoftAppPasswordSettingName : string with get, set" Usage="Microsoft.Bot.Connector.BotAuthentication.MicrosoftAppPasswordSettingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of Setting in web.config which has the Microsoft App Password for the bot 
            </summary>
        <value>To be added.</value>
        <remarks>
            Needs to be used with MicrosoftAppIdSettingName. Ignored if CredentialProviderType is specified.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecutingAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OnActionExecutingAsync (System.Web.Http.Controllers.HttpActionContext actionContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OnActionExecutingAsync(class System.Web.Http.Controllers.HttpActionContext actionContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthentication.OnActionExecutingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.OnActionExecutingAsync : System.Web.Http.Controllers.HttpActionContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botAuthentication.OnActionExecutingAsync (actionContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Connector.BotAuthentication/&lt;OnActionExecutingAsync&gt;d__28))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionContext" Type="System.Web.Http.Controllers.HttpActionContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="actionContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenIdConfigurationUrl">
      <MemberSignature Language="C#" Value="public virtual string OpenIdConfigurationUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OpenIdConfigurationUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.BotAuthentication.OpenIdConfigurationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OpenIdConfigurationUrl As String" />
      <MemberSignature Language="F#" Value="member this.OpenIdConfigurationUrl : string with get, set" Usage="Microsoft.Bot.Connector.BotAuthentication.OpenIdConfigurationUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>