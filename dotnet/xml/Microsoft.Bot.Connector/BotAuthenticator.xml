<Type Name="BotAuthenticator" FullName="Microsoft.Bot.Connector.BotAuthenticator">
  <TypeSignature Language="C#" Value="public sealed class BotAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BotAuthenticator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.BotAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BotAuthenticator" />
  <TypeSignature Language="F#" Value="type BotAuthenticator = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotAuthenticator (Microsoft.Bot.Connector.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator validator = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.BotAuthenticator/EndorsementsValidator validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthenticator.#ctor(Microsoft.Bot.Connector.ICredentialProvider,Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credentialProvider As ICredentialProvider, Optional validator As BotAuthenticator.EndorsementsValidator = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.BotAuthenticator : Microsoft.Bot.Connector.ICredentialProvider * Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator -&gt; Microsoft.Bot.Connector.BotAuthenticator" Usage="new Microsoft.Bot.Connector.BotAuthenticator (credentialProvider, validator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.ICredentialProvider" />
        <Parameter Name="validator" Type="Microsoft.Bot.Connector.BotAuthenticator+EndorsementsValidator" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">To be added.</param>
        <param name="validator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotAuthenticator (string microsoftAppId, string microsoftAppPassword, Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator validator = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string microsoftAppId, string microsoftAppPassword, class Microsoft.Bot.Connector.BotAuthenticator/EndorsementsValidator validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthenticator.#ctor(System.String,System.String,Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (microsoftAppId As String, microsoftAppPassword As String, Optional validator As BotAuthenticator.EndorsementsValidator = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.BotAuthenticator : string * string * Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator -&gt; Microsoft.Bot.Connector.BotAuthenticator" Usage="new Microsoft.Bot.Connector.BotAuthenticator (microsoftAppId, microsoftAppPassword, validator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="microsoftAppId" Type="System.String" />
        <Parameter Name="microsoftAppPassword" Type="System.String" />
        <Parameter Name="validator" Type="Microsoft.Bot.Connector.BotAuthenticator+EndorsementsValidator" />
      </Parameters>
      <Docs>
        <param name="microsoftAppId"> The Microsoft app Id.</param>
        <param name="microsoftAppPassword"> The Microsoft app password.</param>
        <param name="validator"> The endorsements validator.</param>
        <summary>
            Creates an instance of bot authenticator. 
            </summary>
        <remarks> This constructor sets the <see cref="F:Microsoft.Bot.Connector.BotAuthenticator.openIdConfigurationUrl" /> to 
            <see cref="F:Microsoft.Bot.Connector.JwtConfig.ToBotFromChannelOpenIdMetadataUrl" />  and doesn't disable 
            the self issued tokens used by emulator.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotAuthenticator (Microsoft.Bot.Connector.ICredentialProvider credentialProvider, string openIdConfigurationUrl, bool disableEmulatorTokens, Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator validator = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.ICredentialProvider credentialProvider, string openIdConfigurationUrl, bool disableEmulatorTokens, class Microsoft.Bot.Connector.BotAuthenticator/EndorsementsValidator validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthenticator.#ctor(Microsoft.Bot.Connector.ICredentialProvider,System.String,System.Boolean,Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credentialProvider As ICredentialProvider, openIdConfigurationUrl As String, disableEmulatorTokens As Boolean, Optional validator As BotAuthenticator.EndorsementsValidator = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.BotAuthenticator : Microsoft.Bot.Connector.ICredentialProvider * string * bool * Microsoft.Bot.Connector.BotAuthenticator.EndorsementsValidator -&gt; Microsoft.Bot.Connector.BotAuthenticator" Usage="new Microsoft.Bot.Connector.BotAuthenticator (credentialProvider, openIdConfigurationUrl, disableEmulatorTokens, validator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.ICredentialProvider" />
        <Parameter Name="openIdConfigurationUrl" Type="System.String" />
        <Parameter Name="disableEmulatorTokens" Type="System.Boolean" />
        <Parameter Name="validator" Type="Microsoft.Bot.Connector.BotAuthenticator+EndorsementsValidator" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">To be added.</param>
        <param name="openIdConfigurationUrl">To be added.</param>
        <param name="disableEmulatorTokens">To be added.</param>
        <param name="validator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IdentityToken&gt; AuthenticateAsync (System.Net.Http.HttpRequestMessage request, System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Connector.IActivity&gt; activities, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Connector.IdentityToken&gt; AuthenticateAsync(class System.Net.Http.HttpRequestMessage request, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Connector.IActivity&gt; activities, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthenticator.AuthenticateAsync(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{Microsoft.Bot.Connector.IActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthenticateAsync (request As HttpRequestMessage, activities As IEnumerable(Of IActivity), token As CancellationToken) As Task(Of IdentityToken)" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsync : System.Net.Http.HttpRequestMessage * seq&lt;Microsoft.Bot.Connector.IActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IdentityToken&gt;" Usage="botAuthenticator.AuthenticateAsync (request, activities, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Connector.BotAuthenticator/&lt;AuthenticateAsync&gt;d__10))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IdentityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="activities" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Connector.IActivity&gt;" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"> The request that should be authenticated.</param>
        <param name="activities"> The activities extracted from request.</param>
        <param name="token"> The cancellation token.</param>
        <summary>
            Authenticates the request and returns the IdentityToken.
            </summary>
        <returns> The <see cref="T:Microsoft.Bot.Connector.IdentityToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateUnauthorizedResponse">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage GenerateUnauthorizedResponse (System.Net.Http.HttpRequestMessage request, string reason = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage GenerateUnauthorizedResponse(class System.Net.Http.HttpRequestMessage request, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthenticator.GenerateUnauthorizedResponse(System.Net.Http.HttpRequestMessage,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateUnauthorizedResponse (request As HttpRequestMessage, Optional reason As String = &quot;&quot;) As HttpResponseMessage" />
      <MemberSignature Language="F#" Value="static member GenerateUnauthorizedResponse : System.Net.Http.HttpRequestMessage * string -&gt; System.Net.Http.HttpResponseMessage" Usage="Microsoft.Bot.Connector.BotAuthenticator.GenerateUnauthorizedResponse (request, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="request">The request.</param>
        <param name="reason">The reason phrase for unauthorized status code.</param>
        <summary>
            Generates <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> response for the request.
            </summary>
        <returns>A response with status code unauthorized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAuthenticateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryAuthenticateAsync (System.Net.Http.HttpRequestMessage request, System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Connector.IActivity&gt; activities, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryAuthenticateAsync(class System.Net.Http.HttpRequestMessage request, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Connector.IActivity&gt; activities, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthenticator.TryAuthenticateAsync(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{Microsoft.Bot.Connector.IActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAuthenticateAsync (request As HttpRequestMessage, activities As IEnumerable(Of IActivity), token As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.TryAuthenticateAsync : System.Net.Http.HttpRequestMessage * seq&lt;Microsoft.Bot.Connector.IActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="botAuthenticator.TryAuthenticateAsync (request, activities, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Connector.BotAuthenticator/&lt;TryAuthenticateAsync&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="activities" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Connector.IActivity&gt;" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"> The request that should be authenticated.</param>
        <param name="activities"> The activities extracted from request.</param>
        <param name="token"> The cancellation token.</param>
        <summary>
            Authenticates the incoming request and add the <see cref="P:Microsoft.Bot.Connector.IActivity.ServiceUrl" /> for each
            activities to <see cref="F:Microsoft.Bot.Connector.MicrosoftAppCredentials.TrustedHostNames" /> if the request is authenticated.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAuthenticateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IdentityToken&gt; TryAuthenticateAsync (string scheme, string token, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Connector.IdentityToken&gt; TryAuthenticateAsync(string scheme, string token, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.BotAuthenticator.TryAuthenticateAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.TryAuthenticateAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IdentityToken&gt;" Usage="botAuthenticator.TryAuthenticateAsync (scheme, token, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Connector.BotAuthenticator/&lt;TryAuthenticateAsync&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IdentityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scheme" Type="System.String" />
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scheme">To be added.</param>
        <param name="token">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>