<Type Name="ActivityExtensions" FullName="Microsoft.Bot.Connector.ActivityExtensions">
  <TypeSignature Language="C#" Value="public static class ActivityExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ActivityExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.ActivityExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ActivityExtensions" />
  <TypeSignature Language="F#" Value="type ActivityExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetActivityType">
      <MemberSignature Language="C#" Value="public static string GetActivityType (this Microsoft.Bot.Connector.IActivity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetActivityType(class Microsoft.Bot.Connector.IActivity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.GetActivityType(Microsoft.Bot.Connector.IActivity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityType (activity As IActivity) As String" />
      <MemberSignature Language="F#" Value="static member GetActivityType : Microsoft.Bot.Connector.IActivity -&gt; string" Usage="Microsoft.Bot.Connector.ActivityExtensions.GetActivityType activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IActivity" RefType="this" />
      </Parameters>
      <Docs>
        <param name="activity"></param>
        <summary>
            Return the "major" portion of the activity
            </summary>
        <returns>normalized major portion of the activity, aka message/... will return "message"</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelData&lt;TypeT&gt;">
      <MemberSignature Language="C#" Value="public static TypeT GetChannelData&lt;TypeT&gt; (this Microsoft.Bot.Connector.IActivity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TypeT GetChannelData&lt;TypeT&gt;(class Microsoft.Bot.Connector.IActivity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.GetChannelData``1(Microsoft.Bot.Connector.IActivity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChannelData(Of TypeT) (activity As IActivity) As TypeT" />
      <MemberSignature Language="F#" Value="static member GetChannelData : Microsoft.Bot.Connector.IActivity -&gt; 'ypeT" Usage="Microsoft.Bot.Connector.ActivityExtensions.GetChannelData activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TypeT</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TypeT" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IActivity" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TypeT">type to use</typeparam>
        <param name="activity"></param>
        <summary>
            Get channeldata as typed structure
            </summary>
        <returns>typed object or default(TypeT)</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStateClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Connector.StateClient GetStateClient (this Microsoft.Bot.Connector.IActivity activity, Microsoft.Bot.Connector.MicrosoftAppCredentials credentials, string serviceUrl = null, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Connector.StateClient GetStateClient(class Microsoft.Bot.Connector.IActivity activity, class Microsoft.Bot.Connector.MicrosoftAppCredentials credentials, string serviceUrl, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.GetStateClient(Microsoft.Bot.Connector.IActivity,Microsoft.Bot.Connector.MicrosoftAppCredentials,System.String,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStateClient (activity As IActivity, credentials As MicrosoftAppCredentials, Optional serviceUrl As String = null, ParamArray handlers As DelegatingHandler()) As StateClient" />
      <MemberSignature Language="F#" Value="static member GetStateClient : Microsoft.Bot.Connector.IActivity * Microsoft.Bot.Connector.MicrosoftAppCredentials * string * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.Bot.Connector.StateClient" Usage="Microsoft.Bot.Connector.ActivityExtensions.GetStateClient (activity, credentials, serviceUrl, handlers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Deprecated: This method will only get the default state client, if you have implemented a custom state client it will not retrieve it")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Connector.StateClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IActivity" RefType="this" />
        <Parameter Name="credentials" Type="Microsoft.Bot.Connector.MicrosoftAppCredentials" />
        <Parameter Name="serviceUrl" Type="System.String" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="activity"></param>
        <param name="credentials">credentials for bot to access state api</param>
        <param name="serviceUrl">alternate serviceurl to use for state service</param>
        <param name="handlers"></param>
        <summary>
            Get StateClient appropriate for this activity
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStateClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Connector.StateClient GetStateClient (this Microsoft.Bot.Connector.IActivity activity, string microsoftAppId = null, string microsoftAppPassword = null, string serviceUrl = null, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Connector.StateClient GetStateClient(class Microsoft.Bot.Connector.IActivity activity, string microsoftAppId, string microsoftAppPassword, string serviceUrl, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.GetStateClient(Microsoft.Bot.Connector.IActivity,System.String,System.String,System.String,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStateClient (activity As IActivity, Optional microsoftAppId As String = null, Optional microsoftAppPassword As String = null, Optional serviceUrl As String = null, ParamArray handlers As DelegatingHandler()) As StateClient" />
      <MemberSignature Language="F#" Value="static member GetStateClient : Microsoft.Bot.Connector.IActivity * string * string * string * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.Bot.Connector.StateClient" Usage="Microsoft.Bot.Connector.ActivityExtensions.GetStateClient (activity, microsoftAppId, microsoftAppPassword, serviceUrl, handlers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Connector.StateClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IActivity" RefType="this" />
        <Parameter Name="microsoftAppId" Type="System.String" />
        <Parameter Name="microsoftAppPassword" Type="System.String" />
        <Parameter Name="serviceUrl" Type="System.String" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="activity"></param>
        <param name="microsoftAppId"></param>
        <param name="microsoftAppPassword"></param>
        <param name="serviceUrl">alternate serviceurl to use for state service</param>
        <param name="handlers"></param>
        <summary>
            Get StateClient appropriate for this activity
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MentionsId">
      <MemberSignature Language="C#" Value="public static bool MentionsId (this Microsoft.Bot.Connector.IMessageActivity activity, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MentionsId(class Microsoft.Bot.Connector.IMessageActivity activity, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.MentionsId(Microsoft.Bot.Connector.IMessageActivity,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MentionsId (activity As IMessageActivity, id As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member MentionsId : Microsoft.Bot.Connector.IMessageActivity * string -&gt; bool" Usage="Microsoft.Bot.Connector.ActivityExtensions.MentionsId (activity, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IMessageActivity" RefType="this" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activity"></param>
        <param name="id">ChannelAccount.Id</param>
        <summary>
            Is there a mention of Id in the Text Property 
            </summary>
        <returns>true if this id is mentioned in the text</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MentionsRecipient">
      <MemberSignature Language="C#" Value="public static bool MentionsRecipient (this Microsoft.Bot.Connector.IMessageActivity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MentionsRecipient(class Microsoft.Bot.Connector.IMessageActivity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.MentionsRecipient(Microsoft.Bot.Connector.IMessageActivity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MentionsRecipient (activity As IMessageActivity) As Boolean" />
      <MemberSignature Language="F#" Value="static member MentionsRecipient : Microsoft.Bot.Connector.IMessageActivity -&gt; bool" Usage="Microsoft.Bot.Connector.ActivityExtensions.MentionsRecipient activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IMessageActivity" RefType="this" />
      </Parameters>
      <Docs>
        <param name="activity"></param>
        <summary>
            Is there a mention of Recipient.Id in the Text Property 
            </summary>
        <returns>true if this id is mentioned in the text</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMentionText">
      <MemberSignature Language="C#" Value="public static string RemoveMentionText (this Microsoft.Bot.Connector.IMessageActivity activity, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveMentionText(class Microsoft.Bot.Connector.IMessageActivity activity, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.RemoveMentionText(Microsoft.Bot.Connector.IMessageActivity,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveMentionText (activity As IMessageActivity, id As String) As String" />
      <MemberSignature Language="F#" Value="static member RemoveMentionText : Microsoft.Bot.Connector.IMessageActivity * string -&gt; string" Usage="Microsoft.Bot.Connector.ActivityExtensions.RemoveMentionText (activity, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IMessageActivity" RefType="this" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activity"></param>
        <param name="id">id to match</param>
        <summary>
            Replace any mention text for given id from Text property
            </summary>
        <returns>new .Text property value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRecipientMention">
      <MemberSignature Language="C#" Value="public static string RemoveRecipientMention (this Microsoft.Bot.Connector.IMessageActivity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveRecipientMention(class Microsoft.Bot.Connector.IMessageActivity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.RemoveRecipientMention(Microsoft.Bot.Connector.IMessageActivity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveRecipientMention (activity As IMessageActivity) As String" />
      <MemberSignature Language="F#" Value="static member RemoveRecipientMention : Microsoft.Bot.Connector.IMessageActivity -&gt; string" Usage="Microsoft.Bot.Connector.ActivityExtensions.RemoveRecipientMention activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IMessageActivity" RefType="this" />
      </Parameters>
      <Docs>
        <param name="activity"></param>
        <summary>
            Remove recipient mention text from Text property
            </summary>
        <returns>new .Text property value</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetChannelData&lt;TypeT&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetChannelData&lt;TypeT&gt; (this Microsoft.Bot.Connector.IActivity activity, out TypeT instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetChannelData&lt;TypeT&gt;(class Microsoft.Bot.Connector.IActivity activity, [out] !!TypeT&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ActivityExtensions.TryGetChannelData``1(Microsoft.Bot.Connector.IActivity,``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetChannelData(Of TypeT) (activity As IActivity, ByRef instance As TypeT) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetChannelData : Microsoft.Bot.Connector.IActivity *  -&gt; bool" Usage="Microsoft.Bot.Connector.ActivityExtensions.TryGetChannelData (activity, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TypeT" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.IActivity" RefType="this" />
        <Parameter Name="instance" Type="TypeT&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TypeT">type to use</typeparam>
        <param name="activity"></param>
        <param name="instance">The resulting instance, if possible</param>
        <summary>
            Get channeldata as typed structure
            </summary>
        <returns>
          <c>true</c> if value of <seealso cref="P:Microsoft.Bot.Connector.IActivity.ChannelData" /> was coerceable to <typeparamref name="TypeT" />, <c>false</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>