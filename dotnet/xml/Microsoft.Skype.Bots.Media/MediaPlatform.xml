<Type Name="MediaPlatform" FullName="Microsoft.Skype.Bots.Media.MediaPlatform">
  <TypeSignature Language="C#" Value="public static class MediaPlatform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MediaPlatform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Skype.Bots.Media.MediaPlatform" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaPlatform" />
  <TypeSignature Language="F#" Value="type MediaPlatform = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
    <AssemblyVersion>1.7.0.26</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class represents the Skype Bots Media Platform. 
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateMediaConfiguration">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject CreateMediaConfiguration (Microsoft.Skype.Bots.Media.IAudioSocket audioSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject CreateMediaConfiguration(class Microsoft.Skype.Bots.Media.IAudioSocket audioSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration(Microsoft.Skype.Bots.Media.IAudioSocket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaConfiguration (audioSocket As IAudioSocket) As JObject" />
      <MemberSignature Language="F#" Value="static member CreateMediaConfiguration : Microsoft.Skype.Bots.Media.IAudioSocket -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration audioSocket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSocket" Type="Microsoft.Skype.Bots.Media.IAudioSocket" />
      </Parameters>
      <Docs>
        <param name="audioSocket">Socket that handles audio.</param>
        <summary>
            Returns a serialized mediaConfiguration object, containing MP URI and render/source contexts for the audio modality.
            </summary>
        <returns>Serialized MediaConfiguration object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaConfiguration">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject CreateMediaConfiguration (Microsoft.Skype.Bots.Media.IVideoSocket vbssSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject CreateMediaConfiguration(class Microsoft.Skype.Bots.Media.IVideoSocket vbssSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration(Microsoft.Skype.Bots.Media.IVideoSocket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaConfiguration (vbssSocket As IVideoSocket) As JObject" />
      <MemberSignature Language="F#" Value="static member CreateMediaConfiguration : Microsoft.Skype.Bots.Media.IVideoSocket -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration vbssSocket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbssSocket" Type="Microsoft.Skype.Bots.Media.IVideoSocket" />
      </Parameters>
      <Docs>
        <param name="vbssSocket">Video socket for the video-based screen sharing (VBSS) modality. Socket must be configured as RecvOnly.</param>
        <summary>
            Returns a serialized mediaConfiguration object, containing MP URI and render/source contexts for each modality.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaConfiguration">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject CreateMediaConfiguration (Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, Microsoft.Skype.Bots.Media.IDataSocket dataSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject CreateMediaConfiguration(class Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, class Microsoft.Skype.Bots.Media.IDataSocket dataSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration(Microsoft.Skype.Bots.Media.IAudioSocket,Microsoft.Skype.Bots.Media.IDataSocket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaConfiguration (audioSocket As IAudioSocket, dataSocket As IDataSocket) As JObject" />
      <MemberSignature Language="F#" Value="static member CreateMediaConfiguration : Microsoft.Skype.Bots.Media.IAudioSocket * Microsoft.Skype.Bots.Media.IDataSocket -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration (audioSocket, dataSocket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSocket" Type="Microsoft.Skype.Bots.Media.IAudioSocket" />
        <Parameter Name="dataSocket" Type="Microsoft.Skype.Bots.Media.IDataSocket" />
      </Parameters>
      <Docs>
        <param name="audioSocket">To be added.</param>
        <param name="dataSocket">To be added.</param>
        <summary>
            Reserved for the internal use.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaConfiguration">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject CreateMediaConfiguration (Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, Microsoft.Skype.Bots.Media.IVideoSocket videoSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject CreateMediaConfiguration(class Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, class Microsoft.Skype.Bots.Media.IVideoSocket videoSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration(Microsoft.Skype.Bots.Media.IAudioSocket,Microsoft.Skype.Bots.Media.IVideoSocket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaConfiguration (audioSocket As IAudioSocket, videoSocket As IVideoSocket) As JObject" />
      <MemberSignature Language="F#" Value="static member CreateMediaConfiguration : Microsoft.Skype.Bots.Media.IAudioSocket * Microsoft.Skype.Bots.Media.IVideoSocket -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration (audioSocket, videoSocket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSocket" Type="Microsoft.Skype.Bots.Media.IAudioSocket" />
        <Parameter Name="videoSocket" Type="Microsoft.Skype.Bots.Media.IVideoSocket" />
      </Parameters>
      <Docs>
        <param name="audioSocket">Socket that handles audio.</param>
        <param name="videoSocket">Socket that handles video.</param>
        <summary>
            Returns a serialized mediaConfiguration object, containing MP URI and render/source contexts for each modality.
            </summary>
        <returns>Serialized MediaConfiguration object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaConfiguration">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject CreateMediaConfiguration (Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt; videoSockets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject CreateMediaConfiguration(class Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, class System.Collections.Generic.IList`1&lt;class Microsoft.Skype.Bots.Media.IVideoSocket&gt; videoSockets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration(Microsoft.Skype.Bots.Media.IAudioSocket,System.Collections.Generic.IList{Microsoft.Skype.Bots.Media.IVideoSocket})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaConfiguration (audioSocket As IAudioSocket, videoSockets As IList(Of IVideoSocket)) As JObject" />
      <MemberSignature Language="F#" Value="static member CreateMediaConfiguration : Microsoft.Skype.Bots.Media.IAudioSocket * System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt; -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration (audioSocket, videoSockets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSocket" Type="Microsoft.Skype.Bots.Media.IAudioSocket" />
        <Parameter Name="videoSockets" Type="System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt;" />
      </Parameters>
      <Docs>
        <param name="audioSocket">Socket that handles audio.</param>
        <param name="videoSockets">Ordered list of video sockets. The order in which the sockets are provided maps to the order of the streams exposed by MediaPaaS 
            (eg. the first video socket in the list will correspond to the first video stream exposed in the list of MediaStreams in MediaPaaS' MediaFlow resource). 
            If multiview sockets are provided, only the first one can have a send direction (ie. send only or send receive) and all the sockets should have
            a receive direction.</param>
        <summary>
            Returns a serialized mediaConfiguration object, containing MP URI and render/source contexts for each modality.
            </summary>
        <returns>Serialized MediaConfiguration object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaConfiguration">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject CreateMediaConfiguration (Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt; videoSockets, Microsoft.Skype.Bots.Media.IVideoSocket vbssSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject CreateMediaConfiguration(class Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, class System.Collections.Generic.IList`1&lt;class Microsoft.Skype.Bots.Media.IVideoSocket&gt; videoSockets, class Microsoft.Skype.Bots.Media.IVideoSocket vbssSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration(Microsoft.Skype.Bots.Media.IAudioSocket,System.Collections.Generic.IList{Microsoft.Skype.Bots.Media.IVideoSocket},Microsoft.Skype.Bots.Media.IVideoSocket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaConfiguration (audioSocket As IAudioSocket, videoSockets As IList(Of IVideoSocket), vbssSocket As IVideoSocket) As JObject" />
      <MemberSignature Language="F#" Value="static member CreateMediaConfiguration : Microsoft.Skype.Bots.Media.IAudioSocket * System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt; * Microsoft.Skype.Bots.Media.IVideoSocket -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration (audioSocket, videoSockets, vbssSocket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSocket" Type="Microsoft.Skype.Bots.Media.IAudioSocket" />
        <Parameter Name="videoSockets" Type="System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt;" />
        <Parameter Name="vbssSocket" Type="Microsoft.Skype.Bots.Media.IVideoSocket" />
      </Parameters>
      <Docs>
        <param name="audioSocket"></param>
        <param name="videoSockets">Ordered list of video sockets. The order in which the sockets are provided maps to the order of the streams exposed by MediaPaaS 
            (eg. the first video socket in the list will correspond to the first video stream exposed in the list of MediaStreams in MediaPaaS' MediaFlow resource). 
            If multiview sockets are provided, only the first one can have a send direction (ie. send only or send receive) and all the sockets should have
            a receive direction.</param>
        <param name="vbssSocket">Video socket for the video-based screen sharing (VBSS) modality. Socket must be configured as RecvOnly.</param>
        <summary>
            Returns a serialized mediaConfiguration object, containing MP URI and render/source contexts for each modality.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaConfiguration">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JObject CreateMediaConfiguration (Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt; videoSockets, Microsoft.Skype.Bots.Media.IVideoSocket vbssSocket, Microsoft.Skype.Bots.Media.IDataSocket dataSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JObject CreateMediaConfiguration(class Microsoft.Skype.Bots.Media.IAudioSocket audioSocket, class System.Collections.Generic.IList`1&lt;class Microsoft.Skype.Bots.Media.IVideoSocket&gt; videoSockets, class Microsoft.Skype.Bots.Media.IVideoSocket vbssSocket, class Microsoft.Skype.Bots.Media.IDataSocket dataSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration(Microsoft.Skype.Bots.Media.IAudioSocket,System.Collections.Generic.IList{Microsoft.Skype.Bots.Media.IVideoSocket},Microsoft.Skype.Bots.Media.IVideoSocket,Microsoft.Skype.Bots.Media.IDataSocket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaConfiguration (audioSocket As IAudioSocket, videoSockets As IList(Of IVideoSocket), vbssSocket As IVideoSocket, dataSocket As IDataSocket) As JObject" />
      <MemberSignature Language="F#" Value="static member CreateMediaConfiguration : Microsoft.Skype.Bots.Media.IAudioSocket * System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt; * Microsoft.Skype.Bots.Media.IVideoSocket * Microsoft.Skype.Bots.Media.IDataSocket -&gt; Newtonsoft.Json.Linq.JObject" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.CreateMediaConfiguration (audioSocket, videoSockets, vbssSocket, dataSocket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSocket" Type="Microsoft.Skype.Bots.Media.IAudioSocket" />
        <Parameter Name="videoSockets" Type="System.Collections.Generic.IList&lt;Microsoft.Skype.Bots.Media.IVideoSocket&gt;" />
        <Parameter Name="vbssSocket" Type="Microsoft.Skype.Bots.Media.IVideoSocket" />
        <Parameter Name="dataSocket" Type="Microsoft.Skype.Bots.Media.IDataSocket" />
      </Parameters>
      <Docs>
        <param name="audioSocket">To be added.</param>
        <param name="videoSockets">To be added.</param>
        <param name="vbssSocket">To be added.</param>
        <param name="dataSocket">To be added.</param>
        <summary>
            Reserved for the internal use.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize (Microsoft.Skype.Bots.Media.MediaPlatformSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize(class Microsoft.Skype.Bots.Media.MediaPlatformSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.Initialize(Microsoft.Skype.Bots.Media.MediaPlatformSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize (settings As MediaPlatformSettings)" />
      <MemberSignature Language="F#" Value="static member Initialize : Microsoft.Skype.Bots.Media.MediaPlatformSettings -&gt; unit" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.Initialize settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Skype.Bots.Media.MediaPlatformSettings" />
      </Parameters>
      <Docs>
        <param name="settings">Settings to initialize the Bot Media Platform.</param>
        <summary>
            Initializes the Media Platform for Bot.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNumberOfVideoSocketsPerCall">
      <MemberSignature Language="C#" Value="public const int MaxNumberOfVideoSocketsPerCall = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxNumberOfVideoSocketsPerCall = (10)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Skype.Bots.Media.MediaPlatform.MaxNumberOfVideoSocketsPerCall" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxNumberOfVideoSocketsPerCall As Integer  = 10" />
      <MemberSignature Language="F#" Value="val mutable MaxNumberOfVideoSocketsPerCall : int" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.MaxNumberOfVideoSocketsPerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>
            The max number of video sockets that can be passed to the CreateMediaConfiguration API.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNumberOfVideoVbssSocketsPerMediaPlatform">
      <MemberSignature Language="C#" Value="public static int MaxNumberOfVideoVbssSocketsPerMediaPlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxNumberOfVideoVbssSocketsPerMediaPlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Skype.Bots.Media.MediaPlatform.MaxNumberOfVideoVbssSocketsPerMediaPlatform" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxNumberOfVideoVbssSocketsPerMediaPlatform As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxNumberOfVideoVbssSocketsPerMediaPlatform : int" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.MaxNumberOfVideoVbssSocketsPerMediaPlatform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Max number of non-disposed video and vbss sockets (combined) that the MediaPlatform can have concurrently
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNumberOfCoresRequired">
      <MemberSignature Language="C#" Value="public const int MinNumberOfCoresRequired = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinNumberOfCoresRequired = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Skype.Bots.Media.MediaPlatform.MinNumberOfCoresRequired" />
      <MemberSignature Language="VB.NET" Value="Public Const MinNumberOfCoresRequired As Integer  = 2" />
      <MemberSignature Language="F#" Value="val mutable MinNumberOfCoresRequired : int" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.MinNumberOfCoresRequired" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            The minimum number of cores that the Media Platform requires.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public const string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Name" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Skype.Bots.Media.MediaPlatform.Name" />
      <MemberSignature Language="VB.NET" Value="Public Const Name As String " />
      <MemberSignature Language="F#" Value="val mutable Name : string" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of the Bots Media Platform
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public static void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.MediaPlatform.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Shutdown ()" />
      <MemberSignature Language="F#" Value="static member Shutdown : unit -&gt; unit" Usage="Microsoft.Skype.Bots.Media.MediaPlatform.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Shuts down the Bot Media Platform.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>