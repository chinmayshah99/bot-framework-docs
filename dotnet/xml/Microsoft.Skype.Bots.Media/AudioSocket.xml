<Type Name="AudioSocket" FullName="Microsoft.Skype.Bots.Media.AudioSocket">
  <TypeSignature Language="C#" Value="public sealed class AudioSocket : IDisposable, Microsoft.Skype.Bots.Media.IAudioSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AudioSocket extends System.Object implements class Microsoft.Skype.Bots.Media.IAudioSocket, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Skype.Bots.Media.AudioSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AudioSocket&#xA;Implements IAudioSocket, IDisposable" />
  <TypeSignature Language="F#" Value="type AudioSocket = class&#xA;    interface IAudioSocket&#xA;    interface IDisposable&#xA;    interface IInternalAudioSocket" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
    <AssemblyVersion>1.7.0.26</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Skype.Bots.Media.IAudioSocket</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides Send and Receive I/O access to an audio stream.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioSocket (Microsoft.Skype.Bots.Media.AudioSocketSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Skype.Bots.Media.AudioSocketSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.AudioSocket.#ctor(Microsoft.Skype.Bots.Media.AudioSocketSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As AudioSocketSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.Skype.Bots.Media.AudioSocket : Microsoft.Skype.Bots.Media.AudioSocketSettings -&gt; Microsoft.Skype.Bots.Media.AudioSocket" Usage="new Microsoft.Skype.Bots.Media.AudioSocket settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Skype.Bots.Media.AudioSocketSettings" />
      </Parameters>
      <Docs>
        <param name="settings">Socket settings</param>
        <summary>
            Allows the application to send a packet of audio media if the application
            has configured the AudioSocket to send media.
            The application should be sending about 50 packets of audio media per
            second; each buffer containing 20 milliseconds worth of audio content.
            The application must create a concrete class which derives from the
            AudioMediaBuffer abstract class. The buffer object passed to the Send
            method is still potentially in-use after the method returns to the
            caller. The application must not free the buffer's data until the
            the buffer object's Dispose() method is invoked by the Media Platform.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioMediaReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Skype.Bots.Media.AudioMediaReceivedEventArgs&gt; AudioMediaReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Skype.Bots.Media.AudioMediaReceivedEventArgs&gt; AudioMediaReceived" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Skype.Bots.Media.AudioSocket.AudioMediaReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event AudioMediaReceived As EventHandler(Of AudioMediaReceivedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.AudioMediaReceived : EventHandler&lt;Microsoft.Skype.Bots.Media.AudioMediaReceivedEventArgs&gt; " Usage="member this.AudioMediaReceived : System.EventHandler&lt;Microsoft.Skype.Bots.Media.AudioMediaReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Skype.Bots.Media.IAudioSocket.AudioMediaReceived</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Skype.Bots.Media.AudioMediaReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If the application has configured the AudioSocket to receive media, this
            event is raised each time a packet of audio media is received.
            Once the application has consumed the buffer, it must call the buffer's
            Dispose() method.
            </summary>
        <remarks>
            The application must be able to handle at least 50 incoming audio buffers
            per second.
            Events are serialized, so only one event at a time is raised to the app.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioSendStatusChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Skype.Bots.Media.AudioSendStatusChangedEventArgs&gt; AudioSendStatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Skype.Bots.Media.AudioSendStatusChangedEventArgs&gt; AudioSendStatusChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Skype.Bots.Media.AudioSocket.AudioSendStatusChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AudioSendStatusChanged As EventHandler(Of AudioSendStatusChangedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.AudioSendStatusChanged : EventHandler&lt;Microsoft.Skype.Bots.Media.AudioSendStatusChangedEventArgs&gt; " Usage="member this.AudioSendStatusChanged : System.EventHandler&lt;Microsoft.Skype.Bots.Media.AudioSendStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Skype.Bots.Media.IAudioSocket.AudioSendStatusChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Skype.Bots.Media.AudioSendStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If the application has configured the AudioSocket to send media, this
            event is raised to inform the application when it may begin sending
            media and when it should stop. The application cannot send media before
            receiving a MediaSendStatusChanged event indicating the SendStatus is 
            Active, such media will be discarded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.AudioSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="audioSocket.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes the object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DominantSpeakerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Skype.Bots.Media.DominantSpeakerChangedEventArgs&gt; DominantSpeakerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Skype.Bots.Media.DominantSpeakerChangedEventArgs&gt; DominantSpeakerChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Skype.Bots.Media.AudioSocket.DominantSpeakerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DominantSpeakerChanged As EventHandler(Of DominantSpeakerChangedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.DominantSpeakerChanged : EventHandler&lt;Microsoft.Skype.Bots.Media.DominantSpeakerChangedEventArgs&gt; " Usage="member this.DominantSpeakerChanged : System.EventHandler&lt;Microsoft.Skype.Bots.Media.DominantSpeakerChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Skype.Bots.Media.IAudioSocket.DominantSpeakerChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Skype.Bots.Media.DominantSpeakerChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This event is raised when there is a change in the dominant speaker in the conference.
            If there is no dominant speaker in the conference the CurrentDominantSpeaker argument in the event will have the value None (0xFFFFFFFF).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.Skype.Bots.Media.AudioMediaBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class Microsoft.Skype.Bots.Media.AudioMediaBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Skype.Bots.Media.AudioSocket.Send(Microsoft.Skype.Bots.Media.AudioMediaBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (buffer As AudioMediaBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Send : Microsoft.Skype.Bots.Media.AudioMediaBuffer -&gt; unit&#xA;override this.Send : Microsoft.Skype.Bots.Media.AudioMediaBuffer -&gt; unit" Usage="audioSocket.Send buffer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Skype.Bots.Media.IAudioSocket.Send(Microsoft.Skype.Bots.Media.AudioMediaBuffer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Microsoft.Skype.Bots.Media.AudioMediaBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">AudioMediaBuffer to send.</param>
        <summary>
            Allows the application to send a packet of audio media if the application
            has configured the AudioSocket to send media.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToneReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Skype.Bots.Media.ToneReceivedEventArgs&gt; ToneReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Skype.Bots.Media.ToneReceivedEventArgs&gt; ToneReceived" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Skype.Bots.Media.AudioSocket.ToneReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event ToneReceived As EventHandler(Of ToneReceivedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.ToneReceived : EventHandler&lt;Microsoft.Skype.Bots.Media.ToneReceivedEventArgs&gt; " Usage="member this.ToneReceived : System.EventHandler&lt;Microsoft.Skype.Bots.Media.ToneReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Skype.Bots.Media.IAudioSocket.ToneReceived</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Skype.Bots.Media</AssemblyName>
        <AssemblyVersion>1.7.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Skype.Bots.Media.ToneReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This event is raised when the DTMF tone is received. ToneId enum indicates the tone value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>