<Type Name="IScorable&lt;Item,Score&gt;" FullName="Microsoft.Bot.Builder.Scorables.IScorable&lt;Item,Score&gt;">
  <TypeSignature Language="C#" Value="public interface IScorable&lt;in Item,out Score&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IScorable`2&lt;- Item, + Score&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Scorables.IScorable`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IScorable(Of In Item, Out Score)" />
  <TypeSignature Language="F#" Value="type IScorable&lt;'Item, 'Score&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="Item">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="Score">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="Item">To be added.</typeparam>
    <typeparam name="Score">To be added.</typeparam>
    <summary>
            Allow the scoring of items, with external comparison of scores, and enable the winner to take some action.
            </summary>
    <remarks>
            We avoided the traditional "bool TryScore(Item item, object state, out Score score)" pattern to allow for Score generic type parameter covariance.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="DoneAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DoneAsync (Item item, object state, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DoneAsync(!Item item, object state, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.IScorable`2.DoneAsync(`0,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DoneAsync : 'Item * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iScorable.DoneAsync (item, state, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Item" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="state">To be added.</param>
        <param name="token">To be added.</param>
        <summary>
            The scoring process has completed - dispose of any scoped resources.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScore">
      <MemberSignature Language="C#" Value="public Score GetScore (Item item, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Score GetScore(!Item item, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.IScorable`2.GetScore(`0,System.Object)" />
      <MemberSignature Language="F#" Value="abstract member GetScore : 'Item * obj -&gt; 'Score" Usage="iScorable.GetScore (item, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Score</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Item" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
            Gets the score for this item.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasScore">
      <MemberSignature Language="C#" Value="public bool HasScore (Item item, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasScore(!Item item, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.IScorable`2.HasScore(`0,System.Object)" />
      <MemberSignature Language="F#" Value="abstract member HasScore : 'Item * obj -&gt; bool" Usage="iScorable.HasScore (item, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Item" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
            Returns whether this scorable wants to participate in scoring this item.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PostAsync (Item item, object state, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PostAsync(!Item item, object state, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.IScorable`2.PostAsync(`0,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PostAsync : 'Item * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iScorable.PostAsync (item, state, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Item" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="state">To be added.</param>
        <param name="token">To be added.</param>
        <summary>
            If this scorable wins, this method is called.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;object&gt; PrepareAsync (Item item, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; PrepareAsync(!Item item, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.IScorable`2.PrepareAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PrepareAsync : 'Item * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="iScorable.PrepareAsync (item, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Item" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="token">To be added.</param>
        <summary>
            Perform some asynchronous work to analyze the item and produce some opaque state.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>