<Type Name="RegexMatchScorable&lt;InnerState,InnerScore&gt;+Scope" FullName="Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable&lt;InnerState,InnerScore&gt;+Scope">
  <TypeSignature Language="C#" Value="public sealed class RegexMatchScorable&lt;InnerState,InnerScore&gt;.Scope : Microsoft.Bot.Builder.Scorables.Internals.ResolverScope&lt;InnerScore&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit RegexMatchScorable`2/Scope&lt;InnerState, InnerScore&gt; extends Microsoft.Bot.Builder.Scorables.Internals.ResolverScope`1&lt;!InnerScore&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable`2.Scope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegexMatchScorable(Of InnerState, InnerScore).Scope&#xA;Inherits ResolverScope(Of InnerScore)" />
  <TypeSignature Language="F#" Value="type RegexMatchScorable&lt;'InnerState, 'InnerScore&gt;.Scope = class&#xA;    inherit ResolverScope&lt;'InnerScore&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="InnerState" />
    <TypeParameter Name="InnerScore" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.Scorables.Internals.ResolverScope&lt;InnerScore&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="InnerScore">InnerScore</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (System.Text.RegularExpressions.Regex regex, System.Text.RegularExpressions.Match match, Microsoft.Bot.Builder.Scorables.Internals.IResolver inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.RegularExpressions.Regex regex, class System.Text.RegularExpressions.Match match, class Microsoft.Bot.Builder.Scorables.Internals.IResolver inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable`2.Scope.#ctor(System.Text.RegularExpressions.Regex,System.Text.RegularExpressions.Match,Microsoft.Bot.Builder.Scorables.Internals.IResolver)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable&lt;'InnerState, 'InnerScore&gt;.Scope : System.Text.RegularExpressions.Regex * System.Text.RegularExpressions.Match * Microsoft.Bot.Builder.Scorables.Internals.IResolver -&gt; Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable&lt;'InnerState, 'InnerScore&gt;.Scope" Usage="new Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable&lt;'InnerState, 'InnerScore&gt;.Scope (regex, match, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regex" Type="System.Text.RegularExpressions.Regex" />
        <Parameter Name="match" Type="System.Text.RegularExpressions.Match" />
        <Parameter Name="inner" Type="Microsoft.Bot.Builder.Scorables.Internals.IResolver" />
      </Parameters>
      <Docs>
        <param name="regex">To be added.</param>
        <param name="match">To be added.</param>
        <param name="inner">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public readonly System.Text.RegularExpressions.Match Match;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class System.Text.RegularExpressions.Match Match" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable`2.Scope.Match" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Match As Match " />
      <MemberSignature Language="F#" Value="val mutable Match : System.Text.RegularExpressions.Match" Usage="Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable&lt;'InnerState, 'InnerScore&gt;.Scope.Match" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Regex">
      <MemberSignature Language="C#" Value="public readonly System.Text.RegularExpressions.Regex Regex;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class System.Text.RegularExpressions.Regex Regex" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable`2.Scope.Regex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Regex As Regex " />
      <MemberSignature Language="F#" Value="val mutable Regex : System.Text.RegularExpressions.Regex" Usage="Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable&lt;'InnerState, 'InnerScore&gt;.Scope.Regex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Regex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolve">
      <MemberSignature Language="C#" Value="public override bool TryResolve (Type type, object tag, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryResolve(class System.Type type, object tag, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.Internals.RegexMatchScorable`2.Scope.TryResolve(System.Type,System.Object,System.Object@)" />
      <MemberSignature Language="F#" Value="override this.TryResolve : Type * obj *  -&gt; bool" Usage="scope.TryResolve (type, tag, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tag" Type="System.Object" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="tag">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>