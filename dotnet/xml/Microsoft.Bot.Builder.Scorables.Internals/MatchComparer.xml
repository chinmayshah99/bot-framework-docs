<Type Name="MatchComparer" FullName="Microsoft.Bot.Builder.Scorables.Internals.MatchComparer">
  <TypeSignature Language="C#" Value="public sealed class MatchComparer : System.Collections.Generic.IComparer&lt;System.Text.RegularExpressions.Match&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MatchComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;class System.Text.RegularExpressions.Match&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Scorables.Internals.MatchComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MatchComparer&#xA;Implements IComparer(Of Match)" />
  <TypeSignature Language="F#" Value="type MatchComparer = class&#xA;    interface IComparer&lt;Match&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.Text.RegularExpressions.Match&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Generic.IComparer&lt;System.Text.RegularExpressions.Match&gt; Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Generic.IComparer`1&lt;class System.Text.RegularExpressions.Match&gt; Instance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Builder.Scorables.Internals.MatchComparer.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As IComparer(Of Match) " />
      <MemberSignature Language="F#" Value=" staticval mutable Instance : System.Collections.Generic.IComparer&lt;System.Text.RegularExpressions.Match&gt;" Usage="Microsoft.Bot.Builder.Scorables.Internals.MatchComparer.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;System.Text.RegularExpressions.Match&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IComparer&lt;System.Text.RegularExpressions.Match&gt;.Compare">
      <MemberSignature Language="C#" Value="int IComparer&lt;Match&gt;.Compare (System.Text.RegularExpressions.Match one, System.Text.RegularExpressions.Match two);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IComparer&lt;System.Text.RegularExpressions.Match&gt;.Compare(class System.Text.RegularExpressions.Match one, class System.Text.RegularExpressions.Match two) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.Internals.MatchComparer.System#Collections#Generic#IComparer&lt;System#Text#RegularExpressions#Match&gt;#Compare(System.Text.RegularExpressions.Match,System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (one As Match, two As Match) As Integer Implements IComparer(Of Match).Compare" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="one" Type="System.Text.RegularExpressions.Match" />
        <Parameter Name="two" Type="System.Text.RegularExpressions.Match" />
      </Parameters>
      <Docs>
        <param name="one">To be added.</param>
        <param name="two">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>