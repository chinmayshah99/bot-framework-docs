<Type Name="InheritedAttributes" FullName="Microsoft.Bot.Builder.Scorables.Internals.InheritedAttributes">
  <TypeSignature Language="C#" Value="public static class InheritedAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit InheritedAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Scorables.Internals.InheritedAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class InheritedAttributes" />
  <TypeSignature Language="F#" Value="type InheritedAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.12.2.4</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper methods to enumerate inherited attributes for a method.
            </summary>
    <remarks>
            http://bradwilson.typepad.com/blog/2011/08/interface-attributes-class-attributes.html
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AttributesByMethod">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Concurrent.ConcurrentDictionary&lt;System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList&lt;Attribute&gt;&gt; AttributesByMethod;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Concurrent.ConcurrentDictionary`2&lt;class System.Reflection.MethodInfo, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Attribute&gt;&gt; AttributesByMethod" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Builder.Scorables.Internals.InheritedAttributes.AttributesByMethod" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AttributesByMethod As ConcurrentDictionary(Of MethodInfo, IReadOnlyList(Of Attribute)) " />
      <MemberSignature Language="F#" Value=" staticval mutable AttributesByMethod : System.Collections.Concurrent.ConcurrentDictionary&lt;System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyList&lt;Attribute&gt;&gt;" Usage="Microsoft.Bot.Builder.Scorables.Internals.InheritedAttributes.AttributesByMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.ConcurrentDictionary&lt;System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList&lt;System.Attribute&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="For&lt;A&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;A&gt; For&lt;A&gt; (System.Reflection.MethodInfo method) where A : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!A&gt; For&lt;(class System.Attribute) A&gt;(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Scorables.Internals.InheritedAttributes.For``1(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of A As Attribute) (method As MethodInfo) As IEnumerable(Of A)" />
      <MemberSignature Language="F#" Value="static member For : System.Reflection.MethodInfo -&gt; seq&lt;'A (requires 'A :&gt; Attribute)&gt; (requires 'A :&gt; Attribute)" Usage="Microsoft.Bot.Builder.Scorables.Internals.InheritedAttributes.For method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.12.2.4</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;A&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="A">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <typeparam name="A">To be added.</typeparam>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>