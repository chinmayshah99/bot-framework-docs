<Type Name="IRealTimeMediaCallService" FullName="Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService">
  <TypeSignature Language="C#" Value="public interface IRealTimeMediaCallService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRealTimeMediaCallService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRealTimeMediaCallService" />
  <TypeSignature Language="F#" Value="type IRealTimeMediaCallService = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
    <AssemblyVersion>1.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Service interface that invokes the appropriate events on an incoming real-time media call and provides functions to make outgoing requests for that call.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public string CorrelationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorrelationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CorrelationId As String" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : string" Usage="Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Id used for correlating logs across different services
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCall">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EndCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task EndCall() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.EndCall" />
      <MemberSignature Language="VB.NET" Value="Public Function EndCall () As Task" />
      <MemberSignature Language="F#" Value="abstract member EndCall : unit -&gt; System.Threading.Tasks.Task" Usage="iRealTimeMediaCallService.EndCall " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Terminate the call
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnswerAppHostedMediaCompleted">
      <MemberSignature Language="C#" Value="event Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent,System.Threading.Tasks.Task&gt; OnAnswerAppHostedMediaCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent, class System.Threading.Tasks.Task&gt; OnAnswerAppHostedMediaCompleted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnAnswerAppHostedMediaCompleted" />
      <MemberSignature Language="VB.NET" Value="Event OnAnswerAppHostedMediaCompleted As Func(Of AnswerAppHostedMediaOutcomeEvent, Task) " />
      <MemberSignature Language="F#" Value="member this.OnAnswerAppHostedMediaCompleted : Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent, System.Threading.Tasks.Task&gt; " Usage="member this.OnAnswerAppHostedMediaCompleted : System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event raised when the bot gets the outcome of AnswerAppHostedMedia action. If the operation was successful the call is established
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCallCleanup">
      <MemberSignature Language="C#" Value="event Func&lt;System.Threading.Tasks.Task&gt; OnCallCleanup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`1&lt;class System.Threading.Tasks.Task&gt; OnCallCleanup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnCallCleanup" />
      <MemberSignature Language="VB.NET" Value="Event OnCallCleanup As Func(Of Task) " />
      <MemberSignature Language="F#" Value="member this.OnCallCleanup : Func&lt;System.Threading.Tasks.Task&gt; " Usage="member this.OnCallCleanup : System.Func&lt;System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event raised when bot needs to cleanup the call
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCallStateChangeNotification">
      <MemberSignature Language="C#" Value="event Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification,System.Threading.Tasks.Task&gt; OnCallStateChangeNotification;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification, class System.Threading.Tasks.Task&gt; OnCallStateChangeNotification" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnCallStateChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Event OnCallStateChangeNotification As Func(Of CallStateChangeNotification, Task) " />
      <MemberSignature Language="F#" Value="member this.OnCallStateChangeNotification : Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification, System.Threading.Tasks.Task&gt; " Usage="member this.OnCallStateChangeNotification : System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event raised when the bot gets call state change notification
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIncomingCallReceived">
      <MemberSignature Language="C#" Value="event Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaIncomingCallEvent,System.Threading.Tasks.Task&gt; OnIncomingCallReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaIncomingCallEvent, class System.Threading.Tasks.Task&gt; OnIncomingCallReceived" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnIncomingCallReceived" />
      <MemberSignature Language="VB.NET" Value="Event OnIncomingCallReceived As Func(Of RealTimeMediaIncomingCallEvent, Task) " />
      <MemberSignature Language="F#" Value="member this.OnIncomingCallReceived : Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaIncomingCallEvent, System.Threading.Tasks.Task&gt; " Usage="member this.OnIncomingCallReceived : System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaIncomingCallEvent, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaIncomingCallEvent,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event raised when bot receives incoming call
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRosterUpdateNotification">
      <MemberSignature Language="C#" Value="event Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification,System.Threading.Tasks.Task&gt; OnRosterUpdateNotification;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification, class System.Threading.Tasks.Task&gt; OnRosterUpdateNotification" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnRosterUpdateNotification" />
      <MemberSignature Language="VB.NET" Value="Event OnRosterUpdateNotification As Func(Of RosterUpdateNotification, Task) " />
      <MemberSignature Language="F#" Value="member this.OnRosterUpdateNotification : Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification, System.Threading.Tasks.Task&gt; " Usage="member this.OnRosterUpdateNotification : System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event raised when bot gets roster update notification
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWorkflowValidationFailed">
      <MemberSignature Language="C#" Value="event Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaWorkflowValidationOutcomeEvent,System.Threading.Tasks.Task&gt; OnWorkflowValidationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaWorkflowValidationOutcomeEvent, class System.Threading.Tasks.Task&gt; OnWorkflowValidationFailed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnWorkflowValidationFailed" />
      <MemberSignature Language="VB.NET" Value="Event OnWorkflowValidationFailed As Func(Of RealTimeMediaWorkflowValidationOutcomeEvent, Task) " />
      <MemberSignature Language="F#" Value="member this.OnWorkflowValidationFailed : Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaWorkflowValidationOutcomeEvent, System.Threading.Tasks.Task&gt; " Usage="member this.OnWorkflowValidationFailed : System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaWorkflowValidationOutcomeEvent, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaWorkflowValidationOutcomeEvent,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event raised when specified workflow fails to be validated by Bot platform
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Subscribe (Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription videoSubscription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Subscribe(class Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription videoSubscription) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.Subscribe(Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription)" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription -&gt; System.Threading.Tasks.Task" Usage="iRealTimeMediaCallService.Subscribe videoSubscription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.RealTimeMediaCalling</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoSubscription" Type="Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription" />
      </Parameters>
      <Docs>
        <param name="videoSubscription">Details regarding the subscription like the source to subscribe, socket on which subscription needs to be done, etc</param>
        <summary>
            Subscribe to video or video-based screen sharing channel
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>